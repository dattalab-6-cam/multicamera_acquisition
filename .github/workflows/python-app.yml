# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Setup and cache FFmpeg
      uses: federicocarboni/setup-ffmpeg@v3.1  # very fast!
      with:
        ffmpeg-version: "6.1.0"   # may also be "release" or a specific version. semver specifiers (i.e. >=6.1.0) are supported only on Windows.
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -e .[pypylon]  # works fine with setup.cfg for now â€” we can make a reqs file to pin versions later.
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Base tests
      run: |
        pytest multicamera_acquisition/tests  # root dir is /home/runner/work/multicamera_acquisition/multicamera_acquisition
    # - name: GUI tests  # currently hangs in CI
      # run: |
        # pytest multicamera_acquisition/tests/visualization/test_visualization.py --rungui
    - name: Acq with ffmpeg tests
      run: |
        pytest multicamera_acquisition/tests/acquisition/ --writer_type ffmpeg
